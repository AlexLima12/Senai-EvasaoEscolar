// <auto-generated />
using EvasaoEscolar.CONTEXTO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EvasaoEscolar.Migrations
{
    [DbContext(typeof(EvasaEscolarContext))]
    partial class EvasaEscolarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EvasaoEscolar.MODELS.AlertasDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AlertaAntigo");

                    b.Property<int>("AlunoId");

                    b.Property<DateTime>("DataAlerta");

                    b.Property<string>("MensagemAlerta")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("NivelPrioridade");

                    b.Property<int>("OrigemAlerta")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("tbl_Alerta");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.AlunoDisciplinaTurmaDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlunoId");

                    b.Property<int>("DisciplinaTurmaId");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DisciplinaTurmaId");

                    b.ToTable("tbl_AlunoDisciplinaTurma");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.AlunoDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("NomeAluno")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("StatusAlunoEvadiu");

                    b.HasKey("Id");

                    b.ToTable("tbl_Aluno");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.AnotacoesDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlunoId");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("tbl_Anotacoes");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.CursoDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tbl_Cursos");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.DisciplinasDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CursoId");

                    b.Property<string>("NomeDisciplina")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("TermoId");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("TermoId");

                    b.ToTable("tbl_Disciplina");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.DisciplinaTurmaDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplinaId");

                    b.Property<int>("TurmaId");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("tbl_DisciplinaTurma");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.EscolaDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeEscola")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("NumeroUnidade")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tbl_Escola");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.FrequenciaDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlunoDisciplinaTurmaId");

                    b.Property<int>("Atraso");

                    b.Property<int>("Dias");

                    b.Property<int>("Falta");

                    b.Property<int>("FaltaComp");

                    b.Property<int>("NumeroDeAulas");

                    b.Property<int>("Presenca");

                    b.HasKey("Id");

                    b.HasIndex("AlunoDisciplinaTurmaId");

                    b.ToTable("tbl_Frequencia");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.IotDadosDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlunoId");

                    b.Property<decimal>("Anger");

                    b.Property<int>("AulaIot");

                    b.Property<decimal>("Contempt");

                    b.Property<DateTime>("DataIotDados");

                    b.Property<decimal>("Disgust");

                    b.Property<decimal>("EsposureLevel");

                    b.Property<decimal>("EsposureValue");

                    b.Property<bool>("EyeOccluded");

                    b.Property<string>("FaceId")
                        .HasMaxLength(100);

                    b.Property<decimal>("Fear");

                    b.Property<bool>("ForeheadOccluded");

                    b.Property<decimal>("Happiness");

                    b.Property<decimal>("HeadPose");

                    b.Property<int>("Height");

                    b.Property<int>("IotId");

                    b.Property<int>("Left");

                    b.Property<bool>("MouthOccluded");

                    b.Property<decimal>("Neutral");

                    b.Property<decimal>("Sadness");

                    b.Property<decimal>("Smile");

                    b.Property<bool>("StatusProcessadoIotDados");

                    b.Property<decimal>("Surprise");

                    b.Property<int>("Top");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("IotId");

                    b.ToTable("tbl_IotDados");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.IotDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataDiaIot");

                    b.Property<int>("TurmaId");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("tbl_Iot");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.MediaDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlunoDisciplinaTurmaId");

                    b.Property<string>("CalculoMedia")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AlunoDisciplinaTurmaId");

                    b.ToTable("tbl_Media");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.NotaDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlunoDisciplinaTurmaId");

                    b.Property<string>("DescricaoNota")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double>("ValorNota");

                    b.HasKey("Id");

                    b.HasIndex("AlunoDisciplinaTurmaId");

                    b.ToTable("tbl_Nota");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.PermissaoDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomePermissao")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tbl_Permissao");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.PlanilhaDadosDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlunoId");

                    b.Property<string>("Aula1Planilha")
                        .HasMaxLength(50);

                    b.Property<string>("Aula2Planilha")
                        .HasMaxLength(50);

                    b.Property<string>("Aula3Planilha")
                        .HasMaxLength(50);

                    b.Property<string>("Aula4Planilha")
                        .HasMaxLength(50);

                    b.Property<string>("Aula5Planilha")
                        .HasMaxLength(50);

                    b.Property<bool>("DadosProcessados");

                    b.Property<string>("JustFaltaPlanilha")
                        .HasMaxLength(50);

                    b.Property<string>("NomeAluno")
                        .HasMaxLength(50);

                    b.Property<int>("UploadPlanilhaId");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("UploadPlanilhaId");

                    b.ToTable("tbl_PlanilhaDados");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.TermoDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeTermo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tbl_Termo");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.TurmaDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EscolaId");

                    b.Property<string>("NomeTurma")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Periodo")
                        .HasMaxLength(1);

                    b.Property<bool>("StatusTurma");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.ToTable("tbl_Turma");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.UploadPlanilhaDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataReferenciaPlanilha");

                    b.Property<DateTime>("DataUploadPlanilha");

                    b.Property<int>("DisciplinaTurmaId");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaTurmaId");

                    b.ToTable("tbl_UploadPlanilha");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.UsuarioDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("EscolaId");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.ToTable("tbl_Usuario");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.UsuarioPermissaoDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PermissaoId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("PermissaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tbl_UsuarioPermissao");
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.AlertasDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.AlunoDomain", "Aluno")
                        .WithMany("clAlertas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.AlunoDisciplinaTurmaDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.AlunoDomain", "Aluno")
                        .WithMany("clAlunoDisciplinaTurma")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EvasaoEscolar.MODELS.DisciplinaTurmaDomain", "DisciplinaTurma")
                        .WithMany("clAlunoDisciplinaTurma")
                        .HasForeignKey("DisciplinaTurmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.AnotacoesDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.AlunoDomain", "Aluno")
                        .WithMany("clAnotacoes")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.DisciplinasDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.CursoDomain", "Curso")
                        .WithMany("clDisciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EvasaoEscolar.MODELS.TermoDomain", "Termo")
                        .WithMany("Disciplinas")
                        .HasForeignKey("TermoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.DisciplinaTurmaDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.DisciplinasDomain", "Disciplinas")
                        .WithMany("clDisciplinaTurma")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EvasaoEscolar.MODELS.TurmaDomain", "Turma")
                        .WithMany("DisciplinaTurma")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.FrequenciaDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.AlunoDisciplinaTurmaDomain", "AlunoDisciplinaTurma")
                        .WithMany("Frequencia")
                        .HasForeignKey("AlunoDisciplinaTurmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.IotDadosDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.AlunoDomain", "Aluno")
                        .WithMany("IotDados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EvasaoEscolar.MODELS.IotDomain", "Iot")
                        .WithMany("IotDados")
                        .HasForeignKey("IotId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.IotDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.TurmaDomain", "Turma")
                        .WithMany("Iot")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.MediaDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.AlunoDisciplinaTurmaDomain", "AlunoDisciplinaTurma")
                        .WithMany("Media")
                        .HasForeignKey("AlunoDisciplinaTurmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.NotaDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.AlunoDisciplinaTurmaDomain", "AlunoDisciplinaTurma")
                        .WithMany("Nota")
                        .HasForeignKey("AlunoDisciplinaTurmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.PlanilhaDadosDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.AlunoDomain", "Aluno")
                        .WithMany("clPlanilhaDados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EvasaoEscolar.MODELS.UploadPlanilhaDomain", "UploadPlanilha")
                        .WithMany("clPlanilhaDados")
                        .HasForeignKey("UploadPlanilhaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.TurmaDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.EscolaDomain", "Escola")
                        .WithMany("clTurmas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.UploadPlanilhaDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.DisciplinaTurmaDomain", "DisciplinaTurma")
                        .WithMany("clUploadPlanilha")
                        .HasForeignKey("DisciplinaTurmaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.UsuarioDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.EscolaDomain", "Escolas")
                        .WithMany()
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EvasaoEscolar.MODELS.UsuarioPermissaoDomain", b =>
                {
                    b.HasOne("EvasaoEscolar.MODELS.PermissaoDomain", "Permissao")
                        .WithMany()
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EvasaoEscolar.MODELS.UsuarioDomain", "Usuario")
                        .WithMany("ClPermissoesUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
